{"version":3,"sources":["components/Feedback/Feedback.styled.jsx","components/Feedback/FeedbackOptions.jsx","components/Feedback/Statistics.jsx","components/Feedback/Section.jsx","components/Feedback/Notification.jsx","components/Feedback/Feedback.jsx","components/App.js","index.js"],"names":["SectionStyled","styled","section","TitleH1","h1","TitleH2","FeedbackButtonBtn","button","ListDiv","div","ItemLi","li","ItemButtonLi","ItemP","p","NameSpan","span","FeedbackOptions","makeButton","option","onLeaveFeedback","type","id","onClick","renderText","this","props","options","push","Component","Statistics","renderItem","name","counter","sign","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","Feedback","state","e","key","target","setState","prevState","countTotalFeedback","Object","keys","forEach","countPositiveFeedbackPercentage","result","parseInt","toFixed","getStaticChildren","getFeedbackChildren","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1a2e554.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const SectionStyled = styled.section`\n  width: 50%;\n  margin: auto;\n  text-align: center;\n`;\nexport const TitleH1 = styled.h1`\n  color: tomato;\n  font-size: 40px;\n  margin-bottom: 50px;\n`;\nexport const TitleH2 = styled.h1`\n  color: teal;\n  font-size: 30px;\n  margin-bottom: 50px;\n`;\n\nexport const FeedbackButtonBtn = styled.button`\n  background-color: antiquewhite;\n  padding: 10px;\n  min-width: 150px;\n  height: 50px;\n  font-size: 18px;\n  margin: 20px;\n  border-radius: 20px;\n  filter: drop-shadow(2px 4px 6px black);\n`;\n\nexport const ListDiv = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const ItemLi = styled.li`\n  list-style: none;\n  margin: 5px;\n  background-color: lightgray;\n  border: 2px solid grey;\n  min-width: 120px;\n  width: auto;\n`;\nexport const ItemButtonLi = styled.li`\n  list-style: none;\n  margin: 5px;\n`;\nexport const ItemP = styled.p`\n  padding: 10px;\n  font-size: 18px;\n  margin: 0 20px;\n  font-weight: 700;\n  font-size: 28px;\n`;\n\nexport const NameSpan = styled.span`\n  display: block;\n  text-transform: capitalize;\n  pointer-events: none;\n  font-weight: 500;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FeedbackButtonBtn, NameSpan, ListDiv, ItemButtonLi } from './Feedback.styled';\n\nclass FeedbackOptions extends Component {\n  makeButton = (option, onLeaveFeedback) => {\n    return (\n      <ItemButtonLi key={option}>\n        <FeedbackButtonBtn type='button' id={option} onClick={onLeaveFeedback}>\n          <NameSpan>{option}</NameSpan>\n        </FeedbackButtonBtn>\n      </ItemButtonLi>\n    );\n  };\n\n  render() {\n    let renderText = [];\n    const { options, onLeaveFeedback } = this.props;\n    for (let option of options) {\n      if (option) renderText.push(this.makeButton(option, onLeaveFeedback));\n    }\n    return <ListDiv>{renderText}</ListDiv>;\n  }\n}\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.oneOf(['good', 'neutral', 'bad'])).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ItemLi, ItemP, NameSpan, ListDiv } from './Feedback.styled';\n\nclass Statistics extends Component {\n  renderItem = (name, counter, sign = '') => {\n    return (\n      <ItemLi>\n        <ItemP>\n          <NameSpan>{name}:</NameSpan>\n          {counter + sign}\n        </ItemP>\n      </ItemLi>\n    );\n  };\n\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n    return (\n      <ListDiv>\n        {this.renderItem('good', good)}\n        {this.renderItem('neutral', neutral)}\n        {this.renderItem('bad', bad)}\n        {this.renderItem('total', total)}\n        {this.renderItem('positive feedback', positivePercentage, '%')}\n      </ListDiv>\n    );\n  }\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import { SectionStyled, TitleH1 } from './Feedback.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      <TitleH1>{title}</TitleH1>\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import { SectionStyled, TitleH2 } from './Feedback.styled';\nimport PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => {\n  return (\n    <SectionStyled>\n      <TitleH2>{message}</TitleH2>\n    </SectionStyled>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { Component, Fragment } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport { Section } from './Section';\nimport { Notification } from './Notification';\n\nexport class Feedback extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  onLeaveFeedback = e => {\n    const key = e.target.id;\n    this.setState(prevState => {\n      return { [key]: ++prevState[key] };\n    });\n  };\n\n  countTotalFeedback = () => {\n    let counter = 0;\n    Object.keys(this.state).forEach(key => {\n      counter += this.state[key];\n    });\n    return counter;\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    const result = (parseInt(this.state.good) * 100) / total;\n    return total ? parseInt(result.toFixed(0)) : 0;\n  };\n\n  getStaticChildren = () => {\n    const total = this.countTotalFeedback();\n    return total ? (\n      <Statistics\n        good={this.state.good}\n        neutral={this.state.neutral}\n        bad={this.state.bad}\n        total={total}\n        positivePercentage={this.countPositiveFeedbackPercentage(total)}\n      />\n    ) : (\n      <Notification message='No feedback given' />\n    );\n  };\n\n  getFeedbackChildren = () => {\n    return (\n      <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} options={Object.keys(this.state)} />\n    );\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Section title='Please leave feedback' children={this.getFeedbackChildren()} />\n        <hr />\n        <Section title='Statistics' children={this.getStaticChildren()} />\n      </Fragment>\n    );\n  }\n}\n","import { Feedback } from \"./Feedback/Feedback\";\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
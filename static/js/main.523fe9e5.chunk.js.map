{"version":3,"sources":["components/Section/Section.styled.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/App.js","index.js"],"names":["SectionStyled","styled","section","TitleH1","h1","TitleH2","Notification","message","FeedbackButtonBtn","button","NameSpan","span","ListDiv","div","ItemButtonLi","li","FeedbackOptions","names","onLeaveFeedback","map","name","type","id","onClick","ItemLi","ItemP","p","Statistics","countPositiveFeedback","total","good","result","parseInt","toFixed","getRenderArray","data","Object","values","reduce","counter","value","neutral","bad","this","props","toRenderArray","split","toLowerCase","Component","Section","title","component","keys","App","state","e","key","target","setState","prevState","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.523fe9e5.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const SectionStyled = styled.section`\n  width: 50%;\n  margin: auto;\n  text-align: center;\n`;\n\nexport const TitleH1 = styled.h1`\n  color: tomato;\n  font-size: 40px;\n  margin-bottom: 50px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const SectionStyled = styled.section`\n  width: 50%;\n  margin: auto;\n  text-align: center;\n`;\n\nexport const TitleH2 = styled.h1`\n  color: teal;\n  font-size: 30px;\n  margin-bottom: 50px;\n`;\n","import { SectionStyled, TitleH2 } from \"./Notification.styled\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return (\n    <SectionStyled>\n      <TitleH2>{message}</TitleH2>\n    </SectionStyled>\n  );\n};\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const FeedbackButtonBtn = styled.button`\n  background-color: antiquewhite;\n  padding: 10px;\n  min-width: 150px;\n  height: 50px;\n  font-size: 18px;\n  margin: 20px;\n  border-radius: 20px;\n  filter: drop-shadow(2px 4px 6px black);\n`;\n\nexport const NameSpan = styled.span`\n  display: block;\n  text-transform: capitalize;\n  pointer-events: none;\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const ListDiv = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const ItemButtonLi = styled.li`\n  list-style: none;\n  margin: 5px;\n`;\n","import PropTypes from \"prop-types\";\nimport {\n  FeedbackButtonBtn,\n  NameSpan,\n  ListDiv,\n  ItemButtonLi,\n} from \"./FeedbackOptions.styled\";\n\nconst FeedbackOptions = ({ names, onLeaveFeedback }) => {\n  return (\n    <ListDiv>\n      {names.map((name) => (\n        <ItemButtonLi key={name}>\n          <FeedbackButtonBtn type=\"button\" id={name} onClick={onLeaveFeedback}>\n            <NameSpan>{name}</NameSpan>\n          </FeedbackButtonBtn>\n        </ItemButtonLi>\n      ))}\n    </ListDiv>\n  );\n};\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  names: PropTypes.arrayOf(PropTypes.oneOf([\"good\", \"neutral\", \"bad\"]))\n    .isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ListDiv = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const ItemLi = styled.li`\n  list-style: none;\n  margin: 5px;\n  background-color: lightgray;\n  border: 2px solid grey;\n  min-width: 120px;\n  width: auto;\n`;\n\nexport const ItemP = styled.p`\n  padding: 10px;\n  font-size: 18px;\n  margin: 0 20px;\n  font-weight: 700;\n  font-size: 28px;\n`;\n\nexport const NameSpan = styled.span`\n  display: block;\n  pointer-events: none;\n  font-weight: 500;\n  font-size: 18px;\n`;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ItemLi, ItemP, ListDiv, NameSpan } from \"./Statistics.styled\";\n\nclass Statistics extends Component {\n  countPositiveFeedback = (total, good) => {\n    const result = (parseInt(good) * 100) / total;\n    return total ? parseInt(result.toFixed(0)) + \"%\" : \"0%\";\n  };\n\n  getRenderArray = (data) => {\n    const total = Object.values(data).reduce(\n      (counter, value) => (counter += value),\n      0\n    );\n    const { good, neutral, bad } = data;\n    return [\n      { name: \"Good\", value: good },\n      { name: \"Neutral\", value: neutral },\n      { name: \"Bad\", value: bad },\n      { name: \"Total\", value: total },\n      {\n        name: \"Positive feedback\",\n        value: this.countPositiveFeedback(total, good),\n      },\n    ];\n  };\n  render() {\n    const { data } = this.props;\n    const toRenderArray = this.getRenderArray(data);\n    return (\n      <ListDiv>\n        {toRenderArray.map(({ name, value }) => (\n          <ItemLi key={name.split(\" \")[0].toLowerCase()}>\n            <ItemP>\n              <NameSpan>{name}:</NameSpan>\n              {value}\n            </ItemP>\n          </ItemLi>\n        ))}\n      </ListDiv>\n    );\n  }\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  data: PropTypes.exact({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n};\n","import { SectionStyled, TitleH1 } from \"./Section.styled\";\nimport { Component } from \"react\";\nimport Notification from \"../Notification/Notification\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\nimport PropTypes from \"prop-types\";\n\nclass Section extends Component {\n  render() {\n    const { title, data, component, onLeaveFeedback } = this.props;\n\n    return (\n      <SectionStyled>\n        <TitleH1>{title}</TitleH1>\n        {component === \"Notification\" && (\n          <Notification message=\"No feedback given\" />\n        )}\n        {component === \"FeedbackOptions\" && (\n          <FeedbackOptions\n            names={Object.keys(data)}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        )}\n        {component === \"Statistics\" && <Statistics data={data} />}\n      </SectionStyled>\n    );\n  }\n}\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  component: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func,\n  data: PropTypes.exact({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n};\n","import { Component, Fragment } from \"react\";\nimport Section from \"./Section/Section\";\n\nexport class App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  onLeaveFeedback = (e) => {\n    const key = e.target.id;\n    this.setState((prevState) => {\n      return { [key]: ++prevState[key] };\n    });\n  };\n\n  render() {\n    const total = Object.values(this.state).reduce(\n      (counter, value) => (counter += value),\n      0\n    );\n    return (\n      <Fragment>\n        <Section\n          title=\"Please leave feedback\"\n          component=\"FeedbackOptions\"\n          onLeaveFeedback={this.onLeaveFeedback}\n          data={this.state}\n        />\n        <hr />\n        <Section\n          title=\"Statistics\"\n          component={total ? \"Statistics\" : \"Notification\"}\n          data={this.state}\n        />\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { App } from \"./components/App\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
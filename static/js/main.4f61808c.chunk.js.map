{"version":3,"sources":["components/Feedback/Feedback.styled.jsx","components/Feedback/Feedback.jsx","components/App.js","index.js"],"names":["Section","styled","section","TitleH1","h1","FeedbackButton","button","ListDiv","div","ItemLi","li","ItemButton","ItemP","p","Feedback","state","good","neutral","bad","titleFeedback","titleStatistics","addFeedback","e","text","target","id","setState","prevState","countTotalFeedback","counter","Object","keys","forEach","key","countPositiveFeedbackPercentage","total","parseInt","result","parseFloat","toFixed","this","type","onClick","Component","App","render","document","getElementById"],"mappings":"+NAEaA,EAAUC,IAAOC,QAAV,mFAKPC,EAAUF,IAAOG,GAAV,6CAIPC,EAAiBJ,IAAOK,OAAV,4JASdC,EAAUN,IAAOO,IAAV,gFAKPC,EAASR,IAAOS,GAAV,oKAONC,EAAaV,IAAOS,GAAV,iEAIVE,EAAQX,IAAOY,EAAV,mF,OCzBLC,EAAb,4MACEC,MAAQ,CAAEC,KAAM,EAAGC,QAAS,EAAGC,IAAK,GADtC,EAGEC,cAAgB,wBAHlB,EAIEC,gBAAkB,aAJpB,EAMEC,YAAc,SAACC,GACb,IAAMC,EAAOD,EAAEE,OAAOC,GACtB,EAAKC,UAAS,SAACC,GACb,MAAO,CACLX,KAAe,SAATO,IAAoBI,EAAUX,KAAOW,EAAUX,KACrDC,QAAkB,YAATM,IAAuBI,EAAUV,QAAUU,EAAUV,QAC9DC,IAAc,QAATK,IAAmBI,EAAUT,IAAMS,EAAUT,SAZ1D,EAiBEU,mBAAqB,WACnB,IAAIC,EAAU,EAKd,OAJAC,OAAOC,KAAK,EAAKhB,OAAOiB,SAAQ,SAACC,GAC/BJ,GAAW,EAAKd,MAAMkB,MAGjBJ,GAvBX,EA0BEK,gCAAkC,WAChC,IAAMC,EAAQC,SAAS,EAAKR,sBACtBS,EAAsC,IAA5BD,SAAS,EAAKrB,MAAMC,MAAemB,EACnD,OAAOE,EAASC,WAAWD,GAAQE,QAAQ,GAAK,GA7BpD,4CAgCE,WACE,OACE,eAACvC,EAAD,WACE,cAACG,EAAD,UAAUqC,KAAKrB,gBACf,eAACZ,EAAD,WACE,cAACI,EAAD,UACE,cAACN,EAAD,CAAgBoC,KAAK,SAASC,QAASF,KAAKnB,YAAaI,GAAG,OAA5D,oBAIF,cAACd,EAAD,UACE,cAACN,EAAD,CACEoC,KAAK,SACLC,QAASF,KAAKnB,YACdI,GAAG,UAHL,uBAQF,cAACd,EAAD,UACE,cAACN,EAAD,CAAgBoC,KAAK,SAASC,QAASF,KAAKnB,YAAaI,GAAG,MAA5D,sBAKJ,cAACtB,EAAD,UAAUqC,KAAKpB,kBACf,eAACb,EAAD,WACE,cAACE,EAAD,UACE,eAACG,EAAD,oBAAc4B,KAAKzB,MAAMC,UAE3B,cAACP,EAAD,UACE,eAACG,EAAD,uBAAiB4B,KAAKzB,MAAME,aAE9B,cAACR,EAAD,UACE,eAACG,EAAD,mBAAa4B,KAAKzB,MAAMG,SAE1B,cAACT,EAAD,UACE,eAACG,EAAD,qBAAe4B,KAAKZ,0BAEtB,cAACnB,EAAD,UACE,eAACG,EAAD,iCACsB4B,KAAKN,kCAD3B,mBAxEZ,GAA8BS,aCHfC,MAJf,WACE,OAAO,cAAC,EAAD,KCDTC,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4f61808c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Section = styled.section`\r\n  width: 50%;\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\nexport const TitleH1 = styled.h1`\r\n  color: green;\r\n`;\r\n\r\nexport const FeedbackButton = styled.button`\r\n  background-color: antiquewhite;\r\n  padding: 10px;\r\n  min-width: 100px;\r\n  height: 50px;\r\n  font-size: 18px;\r\n  margin: 20px;\r\n`;\r\n\r\nexport const ListDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const ItemLi = styled.li`\r\n  list-style: none;\r\n  margin: 5px;\r\n  background-color: lightgray;\r\n  border-radius: 20px;\r\n  filter: drop-shadow(2px 4px 6px black);\r\n`;\r\nexport const ItemButton = styled.li`\r\n  list-style: none;\r\n  margin: 5px;\r\n`;\r\nexport const ItemP = styled.p`\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  margin: 20px;\r\n`;\r\n","import { Component } from \"react\";\r\nimport {\r\n  FeedbackButton,\r\n  ItemLi,\r\n  ListDiv,\r\n  Section,\r\n  TitleH1,\r\n  ItemP,\r\n  ItemButton,\r\n} from \"./Feedback.styled\";\r\n\r\nexport class Feedback extends Component {\r\n  state = { good: 0, neutral: 0, bad: 0 };\r\n\r\n  titleFeedback = \"Please leave feedback\";\r\n  titleStatistics = \"Statistics\";\r\n\r\n  addFeedback = (e) => {\r\n    const text = e.target.id;\r\n    this.setState((prevState) => {\r\n      return {\r\n        good: text === \"good\" ? ++prevState.good : prevState.good,\r\n        neutral: text === \"neutral\" ? ++prevState.neutral : prevState.neutral,\r\n        bad: text === \"bad\" ? ++prevState.bad : prevState.bad,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    let counter = 0;\r\n    Object.keys(this.state).forEach((key) => {\r\n      counter += this.state[key];\r\n    });\r\n    // console.log(counter);\r\n    return counter;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = parseInt(this.countTotalFeedback());\r\n    const result = (parseInt(this.state.good) * 100) / total;\r\n    return result ? parseFloat(result).toFixed(0) : 0;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Section>\r\n        <TitleH1>{this.titleFeedback}</TitleH1>\r\n        <ListDiv>\r\n          <ItemButton>\r\n            <FeedbackButton type=\"button\" onClick={this.addFeedback} id=\"good\">\r\n              Good\r\n            </FeedbackButton>\r\n          </ItemButton>\r\n          <ItemButton>\r\n            <FeedbackButton\r\n              type=\"button\"\r\n              onClick={this.addFeedback}\r\n              id=\"neutral\"\r\n            >\r\n              Neutral\r\n            </FeedbackButton>\r\n          </ItemButton>\r\n          <ItemButton>\r\n            <FeedbackButton type=\"button\" onClick={this.addFeedback} id=\"bad\">\r\n              Bad\r\n            </FeedbackButton>\r\n          </ItemButton>\r\n        </ListDiv>\r\n        <TitleH1>{this.titleStatistics}</TitleH1>\r\n        <ListDiv>\r\n          <ItemLi>\r\n            <ItemP>Good: {this.state.good}</ItemP>\r\n          </ItemLi>\r\n          <ItemLi>\r\n            <ItemP>Neutral: {this.state.neutral}</ItemP>\r\n          </ItemLi>\r\n          <ItemLi>\r\n            <ItemP>Bad: {this.state.bad}</ItemP>\r\n          </ItemLi>\r\n          <ItemLi>\r\n            <ItemP>Total: {this.countTotalFeedback()}</ItemP>\r\n          </ItemLi>\r\n          <ItemLi>\r\n            <ItemP>\r\n              Positive feedback: {this.countPositiveFeedbackPercentage()}%\r\n            </ItemP>\r\n          </ItemLi>\r\n        </ListDiv>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n","import { Feedback } from \"./Feedback/Feedback\";\n// import Feedback from './Feedback/Feedback';\n// import Statistics from './Statistics/Statistics';\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
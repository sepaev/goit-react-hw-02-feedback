{"version":3,"sources":["components/Feedback/Feedback.styled.jsx","components/Feedback/Feedback.jsx","components/App.js","index.js"],"names":["Section","styled","section","TitleH1","h1","FeedbackButton","button","ListDiv","div","ItemLi","li","ItemP","p","Feedback","state","good","neutral","bad","titleFeedback","titleStatistics","addFeedback","e","text","target","id","setState","prevState","countTotalFeedback","counter","Object","keys","forEach","key","countPositiveFeedbackPercentage","total","parseInt","result","parseFloat","toFixed","this","type","onClick","Component","App","render","document","getElementById"],"mappings":"6NAEaA,EAAUC,IAAOC,QAAV,mFAKPC,EAAUF,IAAOG,GAAV,6CAIPC,EAAiBJ,IAAOK,OAAV,4JASdC,EAAUN,IAAOO,IAAV,gFAKPC,EAASR,IAAOS,GAAV,iDAINC,EAAQV,IAAOW,EAAV,mF,OCnBLC,EAAb,4MACEC,MAAQ,CAAEC,KAAM,EAAGC,QAAS,EAAGC,IAAK,GADtC,EAGEC,cAAgB,wBAHlB,EAIEC,gBAAkB,aAJpB,EAMEC,YAAc,SAACC,GACb,IAAMC,EAAOD,EAAEE,OAAOC,GACtB,EAAKC,UAAS,SAACC,GACb,MAAO,CACLX,KAAe,SAATO,IAAoBI,EAAUX,KAAOW,EAAUX,KACrDC,QAAkB,YAATM,IAAuBI,EAAUV,QAAUU,EAAUV,QAC9DC,IAAc,QAATK,IAAmBI,EAAUT,IAAMS,EAAUT,SAZ1D,EAiBEU,mBAAqB,WACnB,IAAIC,EAAU,EAKd,OAJAC,OAAOC,KAAK,EAAKhB,OAAOiB,SAAQ,SAACC,GAC/BJ,GAAW,EAAKd,MAAMkB,MAGjBJ,GAvBX,EA0BEK,gCAAkC,WAChC,IAAMC,EAAQC,SAAS,EAAKR,sBACtBS,EAAsC,IAA5BD,SAAS,EAAKrB,MAAMC,MAAemB,EACnD,OAAOE,EAASC,WAAWD,GAAQE,QAAQ,GAAK,GA7BpD,4CAgCE,WACE,OACE,eAACtC,EAAD,WACE,cAACG,EAAD,UAAUoC,KAAKrB,gBACf,eAACX,EAAD,WACE,cAACE,EAAD,UACE,cAACJ,EAAD,CAAgBmC,KAAK,SAASC,QAASF,KAAKnB,YAAaI,GAAG,OAA5D,oBAIF,cAACf,EAAD,UACE,cAACJ,EAAD,CACEmC,KAAK,SACLC,QAASF,KAAKnB,YACdI,GAAG,UAHL,uBAQF,cAACf,EAAD,UACE,cAACJ,EAAD,CAAgBmC,KAAK,SAASC,QAASF,KAAKnB,YAAaI,GAAG,MAA5D,sBAKJ,cAACrB,EAAD,UAAUoC,KAAKpB,kBACf,eAACZ,EAAD,WACE,cAACE,EAAD,UACE,eAACE,EAAD,oBAAc4B,KAAKzB,MAAMC,UAE3B,cAACN,EAAD,UACE,eAACE,EAAD,uBAAiB4B,KAAKzB,MAAME,aAE9B,cAACP,EAAD,UACE,eAACE,EAAD,mBAAa4B,KAAKzB,MAAMG,SAE1B,cAACR,EAAD,UACE,eAACE,EAAD,qBAAe4B,KAAKZ,0BAEtB,cAAClB,EAAD,UACE,eAACE,EAAD,iCACsB4B,KAAKN,kCAD3B,mBAxEZ,GAA8BS,aCFfC,MAJf,WACE,OAAO,cAAC,EAAD,KCDTC,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e87bfd63.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Section = styled.section`\n  width: 50%;\n  margin: auto;\n  text-align: center;\n`;\nexport const TitleH1 = styled.h1`\n  color: green;\n`;\n\nexport const FeedbackButton = styled.button`\n  background-color: antiquewhite;\n  padding: 10px;\n  min-width: 100px;\n  height: 50px;\n  font-size: 18px;\n  margin: 20px;\n`;\n\nexport const ListDiv = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const ItemLi = styled.li`\n  list-style: none;\n`;\n\nexport const ItemP = styled.p`\n  padding: 10px;\n  font-size: 18px;\n  margin: 20px;\n`;\n","import { Component } from \"react\";\nimport {\n  FeedbackButton,\n  ItemLi,\n  ListDiv,\n  Section,\n  TitleH1,\n  ItemP,\n} from \"./Feedback.styled\";\n\nexport class Feedback extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  titleFeedback = \"Please leave feedback\";\n  titleStatistics = \"Statistics\";\n\n  addFeedback = (e) => {\n    const text = e.target.id;\n    this.setState((prevState) => {\n      return {\n        good: text === \"good\" ? ++prevState.good : prevState.good,\n        neutral: text === \"neutral\" ? ++prevState.neutral : prevState.neutral,\n        bad: text === \"bad\" ? ++prevState.bad : prevState.bad,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    let counter = 0;\n    Object.keys(this.state).forEach((key) => {\n      counter += this.state[key];\n    });\n    // console.log(counter);\n    return counter;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = parseInt(this.countTotalFeedback());\n    const result = (parseInt(this.state.good) * 100) / total;\n    return result ? parseFloat(result).toFixed(0) : 0;\n  };\n\n  render() {\n    return (\n      <Section>\n        <TitleH1>{this.titleFeedback}</TitleH1>\n        <ListDiv>\n          <ItemLi>\n            <FeedbackButton type=\"button\" onClick={this.addFeedback} id=\"good\">\n              Good\n            </FeedbackButton>\n          </ItemLi>\n          <ItemLi>\n            <FeedbackButton\n              type=\"button\"\n              onClick={this.addFeedback}\n              id=\"neutral\"\n            >\n              Neutral\n            </FeedbackButton>\n          </ItemLi>\n          <ItemLi>\n            <FeedbackButton type=\"button\" onClick={this.addFeedback} id=\"bad\">\n              Bad\n            </FeedbackButton>\n          </ItemLi>\n        </ListDiv>\n        <TitleH1>{this.titleStatistics}</TitleH1>\n        <ListDiv>\n          <ItemLi>\n            <ItemP>Good: {this.state.good}</ItemP>\n          </ItemLi>\n          <ItemLi>\n            <ItemP>Neutral: {this.state.neutral}</ItemP>\n          </ItemLi>\n          <ItemLi>\n            <ItemP>Bad: {this.state.bad}</ItemP>\n          </ItemLi>\n          <ItemLi>\n            <ItemP>Total: {this.countTotalFeedback()}</ItemP>\n          </ItemLi>\n          <ItemLi>\n            <ItemP>\n              Positive feedback: {this.countPositiveFeedbackPercentage()}%\n            </ItemP>\n          </ItemLi>\n        </ListDiv>\n      </Section>\n    );\n  }\n}\n","import { Feedback } from \"./Feedback/Feedback\";\n// import Feedback from './Feedback/Feedback';\n// import Statistics from './Statistics/Statistics';\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
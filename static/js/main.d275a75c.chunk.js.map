{"version":3,"sources":["components/Feedback/Feedback.styled.jsx","components/Feedback/FeedbackOptions .jsx","components/Feedback/Statistics.jsx","components/Feedback/Section.jsx","components/Feedback/Feedback.jsx","components/App.js","index.js"],"names":["SectionStyled","styled","section","TitleH1","h1","FeedbackButtonBtn","button","ListDiv","div","ItemLi","li","ItemButtonLi","ItemP","p","NameSpan","span","FeedbackOptions","makeButton","option","onLeaveFeedback","type","id","onClick","renderText","this","props","options","push","Component","Statistics","renderItem","name","counter","sign","good","neutral","bad","total","positivePercentage","Section","title","Feedback","state","e","key","target","setState","prevState","countTotalFeedback","Object","keys","forEach","countPositiveFeedbackPercentage","result","parseInt","toFixed","feedbackOptions","statisticsOptions","App","render","document","getElementById"],"mappings":"gPAEaA,EAAgBC,IAAOC,QAAV,mFAKbC,EAAUF,IAAOG,GAAV,yFAMPC,EAAoBJ,IAAOK,OAAV,4JASjBC,EAAUN,IAAOO,IAAV,gFAKPC,EAASR,IAAOS,GAAV,oKAONC,EAAeV,IAAOS,GAAV,iEAIZE,EAAQX,IAAOY,EAAV,qFAMLC,EAAWb,IAAOc,KAAV,oF,OCrBNC,E,4MAnBbC,WAAa,SAACC,EAAQC,GACpB,OACE,cAACR,EAAD,UACE,cAACN,EAAD,CAAmBe,KAAK,SAASC,GAAIH,EAAQI,QAASH,EAAtD,SACE,cAACL,EAAD,UAAWI,OAFIA,I,4CAQvB,WACE,IADO,EACHK,EAAa,GACjB,EAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,QAASP,EAAjB,EAAiBA,gBAFV,cAGYO,GAHZ,IAGP,2BAA4B,CAAC,IAApBR,EAAmB,QAC1BK,EAAWI,KAAKH,KAAKP,WAAWC,EAAQC,KAJnC,8BAMP,OAAO,cAACZ,EAAD,UAAUgB,Q,GAjBSK,aCyBfC,E,4MAxBbC,WAAa,SAACC,EAAMC,GAAwB,IAAfC,EAAc,uDAAP,GAClC,OACE,cAACxB,EAAD,UACE,eAACG,EAAD,WACE,cAACE,EAAD,UAAWiB,IADb,KACgCC,EAAUC,Q,4CAMhD,WACE,MAA0DT,KAAKC,MAAvDS,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACE,eAAC/B,EAAD,WACGiB,KAAKM,WAAW,OAAQI,GACxBV,KAAKM,WAAW,UAAWK,GAC3BX,KAAKM,WAAW,MAAOM,GACvBZ,KAAKM,WAAW,QAASO,GACzBb,KAAKM,WAAW,oBAAqBQ,EAAoB,Y,GAnBzCV,aCDZW,EAAU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOd,EAAc,EAAdA,QAC/B,OACE,eAAC1B,EAAD,WACE,cAACG,EAAD,UAAUqC,IACTd,MCDMe,EAAb,4MACEC,MAAQ,CAAER,KAAM,EAAGC,QAAS,EAAGC,IAAK,GADtC,EAGEjB,gBAAkB,SAAAwB,GAChB,IAAMC,EAAMD,EAAEE,OAAOxB,GACrB,EAAKyB,UAAS,SAAAC,GACZ,OAAO,eAAGH,IAAQG,EAAUH,QANlC,EAUEI,mBAAqB,WACnB,IAAIhB,EAAU,EAId,OAHAiB,OAAOC,KAAK,EAAKR,OAAOS,SAAQ,SAAAP,GAC9BZ,GAAW,EAAKU,MAAME,MAEjBZ,GAfX,EAkBEoB,gCAAkC,SAAAf,GAChC,IAAMgB,EAAsC,IAA5BC,SAAS,EAAKZ,MAAMR,MAAeG,EACnD,OAAOA,EAAQgB,EAAOE,QAAQ,GAAK,GApBvC,4CAuBE,WACE,IAAMC,EACJ,cAAC,EAAD,CAAiBrC,gBAAiBK,KAAKL,gBAAiBO,QAASuB,OAAOC,KAAK1B,KAAKkB,SAE9EL,EAAQb,KAAKwB,qBACbS,EACJ,cAAC,EAAD,CACEvB,KAAMV,KAAKkB,MAAMR,KACjBC,QAASX,KAAKkB,MAAMP,QACpBC,IAAKZ,KAAKkB,MAAMN,IAChBC,MAAOA,EACPC,mBAAoBd,KAAK4B,gCAAgCf,KAI7D,OACE,eAAC,WAAD,WACE,cAAC,EAAD,CAASG,MAAM,wBAAwBd,QAAS8B,IAChD,uBACA,cAAC,EAAD,CAAShB,MAAM,aAAad,QAAS+B,WA1C7C,GAA8B7B,aCCf8B,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d275a75c.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const SectionStyled = styled.section`\r\n  width: 50%;\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\nexport const TitleH1 = styled.h1`\r\n  color: green;\r\n  font-size: 40px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const FeedbackButtonBtn = styled.button`\r\n  background-color: antiquewhite;\r\n  padding: 10px;\r\n  min-width: 100px;\r\n  height: 50px;\r\n  font-size: 18px;\r\n  margin: 20px;\r\n`;\r\n\r\nexport const ListDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const ItemLi = styled.li`\r\n  list-style: none;\r\n  margin: 5px;\r\n  background-color: lightgray;\r\n  border-radius: 20px;\r\n  filter: drop-shadow(2px 4px 6px black);\r\n`;\r\nexport const ItemButtonLi = styled.li`\r\n  list-style: none;\r\n  margin: 5px;\r\n`;\r\nexport const ItemP = styled.p`\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  margin: 0 20px;\r\n`;\r\n\r\nexport const NameSpan = styled.span`\r\n  text-transform: capitalize;\r\n  pointer-events: none;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { FeedbackButtonBtn, NameSpan, ListDiv, ItemButtonLi } from './Feedback.styled';\r\n\r\nclass FeedbackOptions extends Component {\r\n  makeButton = (option, onLeaveFeedback) => {\r\n    return (\r\n      <ItemButtonLi key={option}>\r\n        <FeedbackButtonBtn type='button' id={option} onClick={onLeaveFeedback}>\r\n          <NameSpan>{option}</NameSpan>\r\n        </FeedbackButtonBtn>\r\n      </ItemButtonLi>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let renderText = [];\r\n    const { options, onLeaveFeedback } = this.props;\r\n    for (let option of options) {\r\n      renderText.push(this.makeButton(option, onLeaveFeedback));\r\n    }\r\n    return <ListDiv>{renderText}</ListDiv>;\r\n  }\r\n}\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\r\nimport { ItemLi, ItemP, NameSpan, ListDiv } from './Feedback.styled';\r\n\r\nclass Statistics extends Component {\r\n  renderItem = (name, counter, sign = '') => {\r\n    return (\r\n      <ItemLi>\r\n        <ItemP>\r\n          <NameSpan>{name}</NameSpan>: {counter + sign}\r\n        </ItemP>\r\n      </ItemLi>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad, total, positivePercentage } = this.props;\r\n    return (\r\n      <ListDiv>\r\n        {this.renderItem('good', good)}\r\n        {this.renderItem('neutral', neutral)}\r\n        {this.renderItem('bad', bad)}\r\n        {this.renderItem('total', total)}\r\n        {this.renderItem('positive feedback', positivePercentage, '%')}\r\n      </ListDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import { SectionStyled, TitleH1 } from './Feedback.styled';\r\n\r\nexport const Section = ({ title, options }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <TitleH1>{title}</TitleH1>\r\n      {options}\r\n    </SectionStyled>\r\n  );\r\n};\r\n","import { Component, Fragment } from 'react';\r\nimport FeedbackOptions from './FeedbackOptions ';\r\nimport Statistics from './Statistics';\r\nimport { Section } from './Section';\r\n\r\nexport class Feedback extends Component {\r\n  state = { good: 0, neutral: 0, bad: 0 };\r\n\r\n  onLeaveFeedback = e => {\r\n    const key = e.target.id;\r\n    this.setState(prevState => {\r\n      return { [key]: ++prevState[key] };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    let counter = 0;\r\n    Object.keys(this.state).forEach(key => {\r\n      counter += this.state[key];\r\n    });\r\n    return counter;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = total => {\r\n    const result = (parseInt(this.state.good) * 100) / total;\r\n    return total ? result.toFixed(0) : 0;\r\n  };\r\n\r\n  render() {\r\n    const feedbackOptions = (\r\n      <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} options={Object.keys(this.state)} />\r\n    );\r\n    const total = this.countTotalFeedback();\r\n    const statisticsOptions = (\r\n      <Statistics\r\n        good={this.state.good}\r\n        neutral={this.state.neutral}\r\n        bad={this.state.bad}\r\n        total={total}\r\n        positivePercentage={this.countPositiveFeedbackPercentage(total)}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <Section title='Please leave feedback' options={feedbackOptions} />\r\n        <hr />\r\n        <Section title='Statistics' options={statisticsOptions} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import { Feedback } from './Feedback/Feedback';\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}